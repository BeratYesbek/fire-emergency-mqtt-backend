plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.springframework.experimental.aot' version '0.12.2'
    id 'org.flywaydb.flyway' version '9.12.0'
    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.2.8"


}

group = 'com.bm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.modelmapper:modelmapper:3.1.1'


    implementation 'javax.persistence:javax.persistence-api:2.2'
    //implementation 'org.hibernate:hibernate-core:6.1.6.Final'

    //flyway
    implementation 'org.flywaydb:flyway-core:9.12.0'

    //security
    implementation 'com.auth0:java-jwt:4.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


    //swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}

flyway {
    url = 'jdbc:postgresql://localhost:54322/fireDb'
    user = 'user'
    password = 'user123'
}
